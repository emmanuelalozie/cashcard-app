plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.12-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

// tasks.named('test') {
// 	useJUnitPlatform()
// }
tasks.named('test', Test) {
    // Use TestNG or JUnit; uncomment the appropriate line or adjust according to your project setup:
    // useTestNG()
    useJUnitPlatform()

    // Configure the logging options for the test task
    testLogging {
        // Specify what events to log. This setup logs passed, skipped, and failed tests.
        events 'passed', 'skipped', 'failed'

        // Show standard out and standard error of the test JVM(s) on the console.
        showStandardStreams = false

        // Options for how exceptions are shown: 'short', 'full' (default), 'minimal'
        exceptionFormat = 'full'
    }

    // Additional configuration to make sure the console mode is conducive to showing real-time test results.
    outputs.upToDateWhen { false }  // Always run tests even if inputs haven't changed.

    // Explicitly configure test task to always run
    outputs.upToDateWhen { false }
}
